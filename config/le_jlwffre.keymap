/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp Q             &kp W  &kp E           &kp R        &kp T         &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A             &kp S  &kp D           &kp F        &kp G         &kp H            &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z  &kp X  &kp C           &kp V        &kp B         &kp N            &kp M  &kp COMMA  &kp DOT  &mt RSHFT SLASH
                         &mt LCTRL LCMD  &lt 1 SPACE  &kp C_MUTE    &lt 2 BACKSPACE         &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        LOW {
            bindings = <
&kp N1      &kp N2         &kp N3              &kp N4            &kp N5               &kp N6    &kp N7    &kp N8        &kp N9     &kp N0
&kp TAB     &kp MINUS      &kp EQUAL           &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &kp SEMICOLON
&kp DELETE  &kp LS(LG(S))  &kp LC(LS(R))       &kp C_AL_CALC     &to 3                &trans    &trans    &trans        &kp PG_DN  &kp PG_UP
                           &kp LC(LA(DELETE))  &trans            &trans               &trans              &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        RISE {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET   &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans           &trans        &trans        &trans        &trans          &kp LEFT    &kp DOWN       &kp UP_ARROW  &kp RIGHT             &kp NON_US_BACKSLASH
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_NXT  &bt BT_PRV     &trans        &kp PG_DN             &kp PG_UP
                               &trans        &mo 4         &trans          &trans                     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NUMPAD {
            bindings = <
&kp ESCAPE  &kp BACKSPACE  &trans     &trans     &trans    &kp KP_MULTIPLY  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS
&kp TAB     &trans         &trans     &trans     &trans    &kp KP_SLASH     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS
&kp LC(A)   &kp LC(X)      &kp LC(C)  &kp LC(V)  &to 0     &kp KP_COMMA     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER
                           &kp LALT   &trans     &trans    &kp KP_NUMBER_0                   &kp KP_DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        RESET {
            bindings = <
&sys_reset   &none  &none   &none   &none     &none   &none  &none   &none  &sys_reset
&bootloader  &none  &none   &none   &none     &none   &none  &none   &none  &bootloader
&none        &none  &none   &none   &none     &none   &none  &none   &none  &none
                    &trans  &trans  &trans    &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
